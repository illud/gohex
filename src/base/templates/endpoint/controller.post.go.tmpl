// Post {{.StructName}}
// @Summary Post {{.StructName}}
// @Schemes
// @Description Post {{.StructName}}
// @Tags {{.StructName}}
// @Security BearerAuth
// @Accept json
// @Produce json
// @Param Body body {{.ModuleName}}Model.{{.StructName}} true "Body to create {{.StructName}}"
// @Success 200
// @Router /{{.EndpointName}}/{{.MethodNameLower}} [Post]
func {{.MethodFuncName}}(c *gin.Context) {
	var {{.ModuleName}} {{.ModuleName}}Model.{{.StructName}}
	if err := c.ShouldBindJSON(&{{.ModuleName}}); err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}

	err := service.{{.MethodFuncName}}({{.ModuleName}})
	if err != nil {
		c.JSON(http.StatusInternalServerError, gin.H{"error": err.Error()})
		return
	}

	c.JSON(http.StatusOK, gin.H{
		"data": "{{.ModuleName}} created",
	})
}
